{"version":3,"sources":["components/pages/Home.jsx","components/ComponentwithGeoLocation.jsx","App.js","reportWebVitals.js","index.js"],"names":["Home","className","autocomplete","type","id","placeholder","name","ComponentWithGeolocation","geolocation","useGeolocation","error","latitude","longitude","accuracy","altitude","altitudeAccuracy","heading","speed","timestamp","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAoBeA,EAlBF,WACX,OACE,sBAAKC,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,6BACA,qBAAKA,UAAU,aAAf,SACE,uBACEC,aAAa,MACbD,UAAU,iBACVE,KAAK,OACLC,GAAG,gBACHC,YAAY,oBACZC,KAAK,Y,OCSAC,EAnBkB,WAC/B,IAAMC,EAAcC,cAEpB,OAAQD,EAAYE,MAYlB,uDAXA,+BACE,4CAAeF,EAAYG,YAC3B,6CAAgBH,EAAYI,aAC5B,qDAAwBJ,EAAYK,YACpC,4CAAeL,EAAYM,YAC3B,qDAAwBN,EAAYO,oBACpC,2CAAcP,EAAYQ,WAC1B,yCAAYR,EAAYS,SACxB,6CAAgBT,EAAYU,iBCDnBC,MAVf,WACE,OACE,sBAAKlB,UAAU,MAAf,UACE,cAAC,EAAD,IAEA,cAAC,EAAD,QCGSmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.bec27e9a.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Home = () => {\n  return (\n    <div className=\"home-page\">\n      <h1 className=\"home-title\">Recipes Website</h1>\n      <div className=\"home-input\">\n        <input\n          autocomplete=\"off\"\n          className=\"home-searchbar\"\n          type=\"text\"\n          id=\"header-search\"\n          placeholder=\"Search blog posts\"\n          name=\"s\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport useGeolocation from \"react-hook-geolocation\";\n\nconst ComponentWithGeolocation = () => {\n  const geolocation = useGeolocation();\n\n  return !geolocation.error ? (\n    <ul>\n      <li>Latitude: {geolocation.latitude}</li>\n      <li>Longitude: {geolocation.longitude}</li>\n      <li>Location accuracy: {geolocation.accuracy}</li>\n      <li>Altitude: {geolocation.altitude}</li>\n      <li>Altitude accuracy: {geolocation.altitudeAccuracy}</li>\n      <li>Heading: {geolocation.heading}</li>\n      <li>Speed: {geolocation.speed}</li>\n      <li>Timestamp: {geolocation.timestamp}</li>\n    </ul>\n  ) : (\n    <p>No geolocation, sorry.</p>\n  );\n};\n\nexport default ComponentWithGeolocation;\n","import \"./App.css\";\nimport Home from \"./components/pages/Home\";\n// import Test from \"./components/pages/Test\";\nimport ComponentWithGeolocation from \"./components/ComponentwithGeoLocation\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n      {/* <Test /> */}\n      <ComponentWithGeolocation />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}